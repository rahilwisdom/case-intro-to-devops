name: CD (Continuous Delivery & Deployment)

on: workflow_dispatch

jobs:
    
    build-push:
        name: Build and Push Image To DockerHub
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              
            - name: Build and push flaskapp
              uses: docker/build-push-action@v4
              with:
                context: ./app
                file: ./app/Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:${{ github.run_number }}, ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:latest
                  
            - name: Build and push postgres
              uses: docker/build-push-action@v4
              with:
                context: ./postgres
                file: ./postgres/Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/postgres:${{ github.run_number }}, ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest
                
    deploy: 
        name: Deploy to Server
        runs-on: self-hosted
        needs: build-push

        steps:
          - name : Pull latest images
            run: |
                docker pull ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:latest
                docker pull ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest
      
          - name: Stop and Remove Existing Containers and Networks
            run: |
                docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)
                docker network prune -f

          - name: Create Network and Run containers
            run : |
              docker network create absensi
              docker run -d -p 5432:5432 --network absensi --hostname database \
              --mount "type=volume,source=pgdata,destination=/var/lib/postgresql/data" \
              --name postgres-container -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest

              sleep 5

              docker run -d -p 5000:5000 --network absensi --name flask-container \
              -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
              -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
              -e POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:latest
      
          - name: Remove unused data
            run: |
              docker system prune -af
